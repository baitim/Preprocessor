/ DRAWRAM_START = ram[ 1 ] = 500
PUSH 500
POP [ 1 ]

/ DRAWRAM_END =   ram[ 2 ] = 1500
PUSH 1500
POP [ 2 ]

CALL MAIN:
HLT

MAIN:
    CALL PRINT_HELLO:
    PUSH [ 1 ]
    POP rdx
    PUSH 40
    POP rax
    CALL PRINT_CIRCLE:
    RET

/ WARNING function changes registers values (rbx rcx rdx)
PRINT_CIRCLE:
    PUSH 10                      /  обнуление rbx
    POP rbx

    for_X:                          / внешний
        PUSH rbx
        PUSH 10
        ADD
        PUSH rax
        JA ret_print_circle:       / условие выхода

        PUSH 0
        POP rcx                     / обнуление rcx 

        for_Y:                          
            PUSH rcx
            PUSH rax
            JA end_for_Y:       / условие выхода

            CALL PRINT_DOT_OR_STAR:

            CALL ADD_1_TO_RCX:
        JMP for_Y:
        end_for_Y:                      / выход из внутреннего цикла
        CALL WRITE_NEW_LINE:
        CALL ADD_1_TO_RBX:
    JMP for_X:
    ret_print_circle:               / выход из внешнего цикла

    DRAW            / вывод круга

    RET

/ WARNING function changes register value (rdx)
PRINT_DOT_OR_STAR:
    CALL PUSH_DISTANCE_X_TO_O:
    CALL PUSH_DISTANCE_X_TO_O:
    MUL
    CALL PUSH_DISTANCE_Y_TO_O:
    CALL PUSH_DISTANCE_Y_TO_O:
    MUL
    ADD
    CALL PUSH_RADIUS:
    CALL PUSH_RADIUS:
    MUL
    JBE write_star:
    JMP write_dot:

    write_star:
    PUSH 42
    POP [ rdx ]
    CALL ADD_1_TO_RDX:
    RET

    write_dot:
    PUSH 46
    POP [ rdx ]
    CALL ADD_1_TO_RDX:
    RET

ADD_1_TO_RBX:
    PUSH rbx
    PUSH 1
    ADD
    POP  rbx
    RET

ADD_1_TO_RCX:
    PUSH rcx
    PUSH 1
    ADD
    POP  rcx
    RET

ADD_1_TO_RDX:
    PUSH rdx
    PUSH 1
    ADD
    POP  rdx
    RET

WRITE_NEW_LINE:
    PUSH 10
    POP [ rdx ]
    CALL ADD_1_TO_RDX:
    RET

PRINT_RAX:
    PUSH rax
    OUT
    PUSH 10
    OUTC
    RET

PRINT_RBX:
    PUSH rbx
    OUT
    PUSH 10
    OUTC
    RET

PRINT_RCX:
    PUSH rcx
    OUT
    PUSH 10
    OUTC
    RET

PRINT_RDX:
    PUSH rdx
    OUT
    PUSH 10
    OUTC
    RET

PUSH_DISTANCE_X_TO_O:
    PUSH rbx
    PUSH rax
    PUSH 2
    DIV
    SUB
    RET

PUSH_DISTANCE_Y_TO_O:
    PUSH rcx
    PUSH rax
    PUSH 2
    DIV
    SUB
    PUSH 2
    DIV
    RET

PUSH_RADIUS:
    PUSH rax
    PUSH 4
    DIV
    RET

PRINT_HELLO:
    PUSH 72
    OUTC
    PUSH 69
    OUTC
    PUSH 76
    OUTC
    PUSH 76
    OUTC
    PUSH 79
    OUTC
    PUSH 33
    OUTC
    PUSH 10
    OUTC
    RET